/* Specification
You should use SCSS / SASS to create the CSS that (as accurately as possible) implements the design shown in the target images.
Please view the following video for reference given in the folder.
 //1. //The HTML should not be altered in any way. All of your work should be creating
   the SCSS code required to meet the target design.
 2. SCSS should have a mixin to handle the centering of elements.
 3. SCSS should have a mixin that handles media queries.
 //4. There are three breakpoints:
    - 801px and above: header image url is https://via.placeholder.com/400
    - Between 481px and 800px: header image url is https://via.placeholder.com/300
    - 480px and below: header image url is https://via.placeholder.com/200
 5. Circles in .container.circles should be inline at 621px and above, otherwise they should stack vertically.
 6. Circle radii are 70px, 80px, 90px and 100px.
 7. The row / circle background colours are: #4e89ae #43658b #ed6663 #ffa372.
 8. The header and footer background colour is #8ccff7.
 9. The circle and row hover color is #444.
 10. Footer height is 50px. */

$color1:#4e89ae;
$color2:#43658b;
$color3:#ed6663;
$color4:#ffa372;

body{
  padding: 0;
  margin: 0;
}

@mixin bgcoloring($bgcolor: $color1){
  background-color: $bgcolor;
}

$headerAndFooterColor: #8ccff7;
$hoverColor: #444;
$footerHeight: 50px;


@mixin rowtheme($t: pink){
  background-color:$t;
  width: 100%;
  height: 30px;
}

//  2. SCSS should have a mixin to handle the centering of elements.
@mixin centeringstuff(){
  display: flex;
  justify-content: center;
  align-items:center;
  gap: 10px;
}
.picture{
  width: 100%;
  background-color: $headerAndFooterColor;
}

.rectangles{
  display: grid;
  grid-template-columns: repeat(1, 1fr);
  grid-template-rows: repeat(4, 30px);
  margin-top: 30px;
}

.circles{
  margin: 10px;
  @include centeringstuff()
}
.circles div{
  border-radius: 100%;
}

#rect1,#c1{
  @include bgcoloring();
}
#rect2,#c2{
  @include bgcoloring($color2);
}
#rect3,#c3{
  @include bgcoloring($color3);
}
#rect4,#c4{
  @include bgcoloring($color4);
}



// setting the size of all the circles
@mixin circlewidth($size : 100px){
  width: $size;
  height: $size;
}
#c1{
  @include circlewidth(70px);
}
#c2{
  @include circlewidth(80px);
}
#c3{
  @include circlewidth(90px);
}
#c4{
  @include circlewidth();
}


// HOVERING
#rect1:hover,#rect2:hover,#rect3:hover,#rect4:hover,#c1:hover,#c2:hover,#c3:hover,#c4:hover{
  background-color: $hoverColor;
}


//SCSS for the header image
$header_image_large: url(../images/400.png);
$header_image_medium: url(../images/300.png);
$header_image_small: url(../images/200.png);

#pic{
  margin: auto;
  width: 400px;
  height: 400px;
  background-image: url(../images/400.png);
}
@mixin headersize($picsize: 400px){
  #pic{
    width: $picsize;
    height: $picsize;
  }
  .picture{
    height: $picsize;
  }
}

// if the below is above 620, the circles will be stacked vertically.
@media(width < 620px){
  .circles{
    flex-direction: column;
  }
}


@media(width > 800px){
  #pic{
    background-image: $header_image_large;
    width: 400px;
    height: 400px;
  }
  .picture{
    height: 400px;
  }
}

@media(800px > width > 480px){
  
  #pic{
    background-image: $header_image_medium;
    width: 300px;
    height: 300px;
  }
  .picture{
    height: 300px;
  }
}

@media(width < 480px){
  #pic{
    background-image: $header_image_small;
    width: 200px;
    height: 200px;
  }
  .picture{
    height: 200px;
  }
}
footer{
  height: 30px;
  @extend .picture
}